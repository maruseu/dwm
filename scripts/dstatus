#!/bin/sh
ps h -p $$ -o args='' | cut -f1 -d' '

s1="   "; s2="   "
cn=""; ci=""; cw=""; ce=""
#cs="";
cs="";

echo $$ > /tmp/ram/dwmStat.pid

if which pactl; then
	uVolume () {
		volume=`pactl list sinks | grep -v 'Base Volume' | grep Volume | head -1 | awk '{print $5}' | tr -d "%"`
		mute=`pactl list sinks | grep Mute | awk '{print $2}'`
		if [ $mute = "no" ]; then
			if [ "$volume" -eq 0 ]; then
				volume="$cn$s1$volume%$s2"
			elif [ "$volume" -gt 100 ]; then
				volume="$ce$s1$volume%$s2"
			elif [ "$volume" -ge 50 ]; then
				volume="$cs$s1$volume%$s2"
			elif [ "$volume" -gt 0 ]; then
				volume="$cw$s1$volume%$s2"
			fi
		else
			volume="$cn$s1"MUTE"$s2"
		fi

		updateRoot=1
	}
elif which amixer; then
	uVolume () {
		volume=`amixer get Master | grep 'Mono: Playback' | awk '{print $4}' | tr -d "[\[\]]" | tr -d '%'`
		mute=`amixer get Master | grep "\[off\]"`
		if [ -z $mute ]; then
			if [ "$volume" -eq "0" ]; then
				volume="$cn$s1$volume%$s2"
			elif [ "$volume" -gt "100" ]; then
				volume="$cw$s1$volume%$s2"
			elif [ "$volume" -gt "20" ]; then
				volume="$cs$s1$volume%$s2"
			elif [ "$volume" -gt "0" ]; then
				volume="$cw$s1$volume%$s2"
			fi
		else
			volume="$cn$s1"MUTE"$s2"
		fi

		updateRoot=1
	}
else
	volume="$cn"
fi
iVolume=2

uAcpi () {
#	acpi=`acpi -b | tr "[, ]" "\n" | grep "%" | tr -d "%"`
	acpi=`bar.lua $(echo "$(acpi -b | tr "[, ]" "\n" | grep "%" | tr -d "%") / 100" | bc -l)`
	if acpi --ac-adapter | grep 'on-line' > /dev/null; then
		acpi="$cs ▕$acpi▏ "
	else
		acpi="$ci ▕$acpi▏ "
	fi
	updateRoot=1
}
iAcpi=4

uIbus () {
	ibus=`ibus engine | sed 's/:/ /g' | sed 's/-/ /g' | awk '{print toupper($2)}'`
	ibus="$cs$s1$ibus$s2"
	updateRoot=1
}
iIbus=10

uMpd () {
	mpd=`mpc current -f "$ci$s1%artist% - %title%$s2"`
	if [ -z "$mpd" ]; then
		mpd="$cn"
	fi
	updateRoot=1
}
iMpd=60

uCorona () {
	corona=`curl https://corona-stats.online/BR 2> /dev/null | grep Brazil | awk '{print $6}'`
	corona="$s1Corona-chan: $corona$s2"
	updateRoot=1
}
iCorona=30

uWifi () {
	wifi=`grep wlp3s0 /proc/net/wireless | awk '{ print int($3 * 100 / 70) }'`
	if [ $wifi -ge 80 ]; then
	    wifi="$cs$s1◎$s2"
	elif [ $wifi -ge 60 ]; then
	    wifi="$ci$s1◎$s2"
	elif [ $wifi -ge 40 ]; then
	    wifi="$cw$s1◯$s2"
	elif [ $wifi -gt 0 ]; then
	    wifi="$ce$s1○$s2"
	else
	    wifi="$ce$s1◌$s2"
	fi
	updateRoot=1
}
iWifi=3

uTemp () {
	temp=`sensors | grep "Package id 0:" | sed -e "s/+//" -e "s/ /\n/g" -e "s/\.0//" | grep -v "+" | grep °C`
	temp="$cs$s1$temp$s2"
	updateRoot=1
}
iTemp=1

uDate () {
	date=`LC_ALL=en_US.UTF-8 date +'%a %d/%m %H:%M'`
	date="$cs$s1$date$s2"
	updateRoot=1
}
iDate=30

uAnime () {
	anime=`~/.scripts/animeChart2.lua panel`
	anime="$cs$s1$anime$s2"
	updateRoot=1
}
iAnime=1

uDisks () {
	disks=`df -h | grep /dev/sda1 | awk '{print toupper($1)" "$4}' | sed -e ':a' -e 'N' -e 's/\n/ \| /g' | sed 's/\/DEV\/SD//g'`
	disks="$cs$s1$disks$s2"
	updateRoot=1
}
iDisks=30

trap "sVolume=1;" USR1
trap "sMpd=1;"    USR2
trap "sIbus=1;"   RTMIN

sVolume=0
sAcpi=0
sMpd=0
sIbus=0


uCorona
uVolume
uTemp
uIbus
uAcpi
uMpd
uDate
uWifi
uDisks
#uAnime

while true; do
	time=`date +%S`

	if [ "$( expr $time % $iVolume )" -eq "0" ] || [ $sVolume -eq "1" ]; then
		printf "volume.."
		uVolume
		sVolume=0
	fi

	if [ "$( expr $time % $iAcpi )" -eq "0" ]; then
		printf "acpi.."
		uAcpi
	fi

	if [ "$( expr $time % $iIbus )" -eq "0" ] || [ $sIbus -eq "1" ]; then
		printf "ibus.."
		uIbus
		sIbus=0
	fi

	if [ "$( expr $time % $iMpd )" -eq "0" ] || [ $sMpd -eq "1" ]; then
		printf "mpd.."
		uMpd
		sMpd=0
	fi

	if [ "$( expr $time % $iWifi )" -eq "0" ]; then
		printf "wifi.."
		uWifi
	fi

	if [ "$( expr $time % $iTemp )" -eq "0" ]; then
		printf "temp.."
		uTemp
	fi

	if [ "$( expr $time % $iCorona )" -eq "0" ]; then
		printf "corona.."
		uCorona
	fi
	
	if [ "$( expr $time % $iDate )" -eq "0" ]; then
		printf "time.."
		uDate
	fi

#	if [ "$( expr $time % $iAnime )" -eq "0" ]; then
#		printf "anime.."
#		uAnime
#	fi

#	if [ "$( expr $time % $iDisks )" -eq "0" ]; then
#		printf "disks.."
#		uDisks
#	fi

	if [ "$updateRoot" -eq "1" ]; then
		printf "ROOT NAME\n"
		xsetroot -name "$mpd$volume$temp$corona$wifi$acpi$ibus$date"
		updateRoot=0
	fi

	sleep 1
done
