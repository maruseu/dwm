while :; do
	current_mus=$(mpc current --wait)

	notify-send "Now Playing" "$current_mus"

	kill -USR2 $$
	pkill -P $$ sleep
done &

uMpd () {
	mpd="$ci$s1$(mpc current)$s2"
	if [ "$mpd" = "$ci$s1$s2" ]; then
		mpd="$cn"
	fi
	updateRoot=1
}
uMpd

trap "sMpd=1;" USR2
sMpd=0


uTemp () {
	temp=`sensors | grep "Package id 0:" | sed -e "s/+//" -e "s/ /\n/g" -e "s/\.0//" | grep -v "+" | grep °C`
	temp="$cs$s1$temp$s2"
	updateRoot=1
}
iTemp=1
uTemp


uDisks () {
	disks=`df -h | grep /dev/sda1 | awk '{print toupper($1)" "$4}' | sed -e ':a' -e 'N' -e 's/\n/ \| /g' | sed 's/\/DEV\/SD//g'`
	disks="$cs$s1$disks$s2"
	updateRoot=1
}
iDisks=30
uDisks

uVolume () {
	volume=`pactl list sinks | grep -v 'Base Volume' | grep Volume | head -1 | awk '{print $5}' | tr -d "%"`
	mute=`pactl list sinks | grep Mute | awk '{print $2}'`
	if [ $mute = "no" ]; then
		if [ "$volume" -eq 0 ]; then
			volume="$cs$s1^c#FFFFFF^^r0,0,30,30^^c#555555^^r0,7,30,4^^c#55FF77^^r2,8,$(expr $volume / 4),2^^f29^$s2"
		elif [ "$volume" -gt 100 ]; then
			volume="$cs$s1^c#FFFFFF^^r0,0,30,30^^c#555555^^r0,7,30,4^^c#55FF77^^r2,8,25,2^^c#FF5577^^r2,8,$(expr $(expr $volume - 100) / 4),2^^f29^$s2"
		elif [ "$volume" -ge 50 ]; then
			volume="$cs$s1^c#FFFFFF^^r0,0,30,30^^c#555555^^r0,7,30,4^^c#55FF77^^r2,8,$(expr $volume / 4),2^^f29^$s2"
		elif [ "$volume" -gt 0 ]; then
			volume="$cs$s1^c#FFFFFF^^r0,0,30,30^^c#555555^^r0,7,30,4^^c#55FF77^^r2,8,$(expr $volume / 4),2^^f29^$s2"
		fi
	else
		volume="$cn$s1"MUTE"$s2"
	fi

	updateRoot=1
}

iVolume=2
uVolume

trap "sVolume=1;" USR1
sVolume=0


uWifi () {
	wifi=`grep wlp3s0 /proc/net/wireless | awk '{ print int($3 * 100 / 70) }'`
	if [ $wifi -ge 80 ]; then
	    wifi="$cs$s1◎$s2"
	elif [ $wifi -ge 60 ]; then
	    wifi="$cs$s1◎$s2"
	elif [ $wifi -ge 40 ]; then
	    wifi="$cs$s1◯$s2"
	elif [ $wifi -gt 0 ]; then
	    wifi="$cs$s1○$s2"
	else
	    wifi="$ce$s1◌$s2"
	fi
	updateRoot=1
}
iWifi=3
uWifi


uBat () {
	for i in /sys/class/power_supply/BAT?/ ; do
		if [ -e $i ]; then
			bat=`cat $i/capacity`
			
			if grep 'Discharging' $i/status > /dev/null; then
				bat="^c#FFFFFF^^r0,0,30,30^^c#888888^^r0,7,1,4^^r1,5,21,8^^c#000000^^r2,6,19,6^^c#FF5577^^r2,6,$(expr $bat / 5),6^^f22^"
			else
				bat="^c#FFFFFF^^r0,0,30,30^^c#888888^^r0,7,1,4^^r1,5,21,8^^c#000000^^r2,6,19,6^^c#55FF77^^r2,6,$(expr $bat / 5),6^^f22^"
			fi
			tbat="$cs$s1$bat$s2"
		fi
	done
	[ -z "$tbat" ] && tbat="$cs"
	updateRoot=1
}
iBat=1
uBat


uIbus () {
	ibus=`ibus engine | sed 's/:/ /g' | sed 's/-/ /g' | awk '{print toupper($2)}'`
	ibus="$cs$s1$ibus$s2"
	updateRoot=1
}
iIbus=10
uIbus

trap "sIbus=1;"   RTMIN
sIbus=0


uDate () {
	date=`date +'%a %d/%m %H:%M'`
	date="$cs$s1$date$s2"
	updateRoot=1
}
iDate=30
uDate

